{"version":3,"sources":["webpack:///./src/app/pages/quiz-landing/quiz-landing.module.ts","webpack:///./src/app/pages/quiz-landing/quiz-landing.page.html","webpack:///./src/app/pages/quiz-landing/quiz-landing.page.scss","webpack:///./src/app/pages/quiz-landing/quiz-landing.page.ts"],"names":[],"mappings":"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","file":"pages-quiz-landing-quiz-landing-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\nimport { QuizLandingPage } from \"./quiz-landing.page\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: QuizLandingPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [QuizLandingPage]\r\n})\r\nexport class QuizLandingPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-menu-button class=\\\"menu-button\\\" ></ion-menu-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n\\r\\n        <ion-title text-center=\\\"\\\">Quiz</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n    <ion-card *ngIf=\\\"quiz_journey_data\\\">\\r\\n        <ion-card-header>\\r\\n            <ion-card-title>Challenge</ion-card-title>\\r\\n\\r\\n            <ion-card-subtitle>Level : Beginner</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n\\r\\n        <ion-card-content>\\r\\n            <ion-item no-padding=\\\"\\\" no-margin=\\\"\\\">\\r\\n                <ion-label>Category > {{paused_quiz.category}}</ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-grid>\\r\\n                <ion-row justify-content-center=\\\"\\\">\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                        <p>Current Page</p>\\r\\n                        <strong>{{paused_quiz.current_index + 1}}</strong>\\r\\n                    </ion-col>\\r\\n\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                        <p>Countdown</p>\\r\\n                        <strong> {{paused_quiz.countdown}}Secs</strong>\\r\\n                    </ion-col>\\r\\n\\r\\n                    <ion-col size=\\\"4\\\">\\r\\n                        <p>Remaining</p>\\r\\n                        <strong\\r\\n                        >{{paused_quiz.quiz_config.amount - (paused_quiz.current_index +\\r\\n                            1) }}</strong\\r\\n                        >\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-grid>\\r\\n            <ion-button expand=\\\"block\\\" (click)=\\\"resumePausedQuiz()\\\"\\r\\n            >Resume\\r\\n            </ion-button\\r\\n            >\\r\\n        </ion-card-content>\\r\\n    </ion-card>\\r\\n\\r\\n    <div *ngIf=\\\"data_loaded\\\">\\r\\n        <ion-card *ngIf=\\\"paused_quiz\\\">\\r\\n            <ion-card-header>\\r\\n                <ion-card-title class=\\\"primary-color\\\">Paused Quiz</ion-card-title>\\r\\n\\r\\n                <!-- <ion-card-subtitle>Paused Quiz Found </ion-card-subtitle>-->\\r\\n            </ion-card-header>\\r\\n\\r\\n            <ion-card-content>\\r\\n                <ion-item no-padding=\\\"\\\" no-margin=\\\"\\\">\\r\\n                    <ion-label class=\\\"\\\">\\r\\n                        <span class=\\\"primary-color\\\"> Exam :-  </span>\\r\\n                        {{quizService.getExamTypeDisplayName(paused_quiz.quiz_config.type)}}\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item no-padding=\\\"\\\" no-margin=\\\"\\\">\\r\\n                    <ion-label >  <span class=\\\"primary-color\\\"> Subject :-  </span>{{quizService.getSubjectDisplayName(paused_quiz.quiz_config.subject)}}\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item no-padding=\\\"\\\" no-margin=\\\"\\\">\\r\\n                    <ion-label class=\\\"\\\">\\r\\n                        <span class=\\\"primary-color\\\"> Year :-  </span>\\r\\n                        {{paused_quiz.quiz_config.year}}\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <ion-grid>\\r\\n                    <ion-row justify-content-center=\\\"\\\">\\r\\n                        <ion-col size=\\\"4\\\">\\r\\n                            <p  class=\\\"primary-color \\\">Questions</p>\\r\\n                            <strong class=\\\" \\\">{{paused_quiz.quiz_config.amount}}</strong>\\r\\n                        </ion-col>\\r\\n\\r\\n\\r\\n                        <ion-col size=\\\"4\\\">\\r\\n                            <p  class=\\\"primary-color \\\">Paused At</p>\\r\\n                            <strong class=\\\"\\\">\\r\\n\\r\\n            {{paused_quiz.current_index + 1}}\\r\\n                            </strong\\r\\n                            >\\r\\n                        </ion-col>\\r\\n\\r\\n\\r\\n\\r\\n                        <ion-col size=\\\"4\\\">\\r\\n                            <p  class=\\\"primary-color \\\">Timer</p>\\r\\n                            <strong class=\\\"\\\"> {{paused_quiz.countdown}} Secs </strong>\\r\\n                        </ion-col>\\r\\n\\r\\n\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n                <ion-button expand=\\\"block\\\" (click)=\\\"resumePausedQuiz()\\\"\\r\\n                >Resume\\r\\n                </ion-button\\r\\n                >\\r\\n                <p text-center=\\\"\\\">OR</p>\\r\\n\\r\\n                <ion-button expand=\\\"block\\\" (click)=\\\"startNewQuiz()\\\"\\r\\n                >Start New Quiz\\r\\n                </ion-button>\\r\\n            </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n\\r\\n        <form\\r\\n                *ngIf=\\\"!paused_quiz\\\"\\r\\n                (ngSubmit)=\\\"submitQuizConfiguration()\\\"\\r\\n                #quizConfigForm=\\\"ngForm\\\"\\r\\n        >\\r\\n            <ion-list>\\r\\n                <ion-list-header></ion-list-header>\\r\\n\\r\\n                <ion-item>\\r\\n                    <ion-label>Exam Type</ion-label>\\r\\n\\r\\n                    <ion-select\\r\\n                            [interfaceOptions]=\\\"customActionSheetOptions\\\"\\r\\n                            interface=\\\"action-sheet\\\"\\r\\n                            [(ngModel)]=\\\"quiz_config.type\\\"\\r\\n                            name=\\\"type\\\"\\r\\n                            [placeholder]=\\\"'E.g Jamb'\\\"\\r\\n                    >\\r\\n                        <ion-select-option *ngFor=\\\"let type of exam_types\\\" value=\\\"{{type.name}}\\\"\\r\\n                        >{{type.title}}\\r\\n                        </ion-select-option\\r\\n                        >\\r\\n\\r\\n                        <ion-select-option value=\\\"ican\\\" disabled>ICAN (N/A .Coming Soon)</ion-select-option>\\r\\n\\r\\n                        <ion-select-option value=\\\"ccna\\\" disabled>CCNA (N/A. Coming Soon)</ion-select-option>\\r\\n\\r\\n                        <ion-select-option value=\\\"pmp\\\" disabled>PMP (N/A. Coming Soon)</ion-select-option>\\r\\n\\r\\n                    </ion-select>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                    <ion-label>Subject</ion-label>\\r\\n\\r\\n                    <ion-select\\r\\n                            [interfaceOptions]=\\\"customActionSheetOptions\\\"\\r\\n                            interface=\\\"action-sheet\\\"\\r\\n                            [(ngModel)]=\\\"quiz_config.subject\\\"\\r\\n                            name=\\\"subject\\\"\\r\\n                            [placeholder]=\\\"'E.g English'\\\"\\r\\n                    >\\r\\n                        <ion-select-option *ngFor=\\\"let subject of subjects\\\" value=\\\"{{subject.name}}\\\"\\r\\n                        >{{subject.title}}\\r\\n                        </ion-select-option\\r\\n                        >\\r\\n                    </ion-select>\\r\\n                </ion-item>\\r\\n\\r\\n\\r\\n                <ion-item>\\r\\n                    <ion-label>Year</ion-label>\\r\\n\\r\\n                    <ion-select\\r\\n                            [interfaceOptions]=\\\"yearActionSheetOptions\\\"\\r\\n                            interface=\\\"action-sheet\\\"\\r\\n                            [(ngModel)]=\\\"quiz_config.year\\\"\\r\\n                            name=\\\"year\\\"\\r\\n                            [placeholder]=\\\"'E.g 2012'\\\"\\r\\n                    >\\r\\n\\r\\n\\r\\n                        <ion-select-option value=\\\"\\\">Random</ion-select-option>\\r\\n\\r\\n                        <ion-select-option *ngFor=\\\"let i of exam_years\\\" value=\\\"{{i}}\\\"\\r\\n                        >{{i}}\\r\\n                        </ion-select-option>\\r\\n\\r\\n\\r\\n                    </ion-select>\\r\\n                </ion-item>\\r\\n\\r\\n\\r\\n                <ion-item>\\r\\n                    <ion-label slot=\\\"start\\\">Questions No</ion-label>\\r\\n\\r\\n<!--\\r\\n                    <ion-input\\r\\n                            slot=\\\"end\\\"\\r\\n                            [min]=\\\"2\\\"\\r\\n                            [max]=\\\"max_question_count\\\"\\r\\n                            [value]=\\\"max_question_count\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            [(ngModel)]=\\\"quiz_config.amount\\\"\\r\\n                            name=\\\"amount\\\"\\r\\n                    >\\r\\n                    </ion-input>-->\\r\\n\\r\\n\\r\\n                    <ion-select\\r\\n                            [interfaceOptions]=\\\"questionNumberActionSheetOptions\\\"\\r\\n                            interface=\\\"action-sheet\\\"\\r\\n                            [(ngModel)]=\\\"quiz_config.amount\\\"\\r\\n                            name=\\\"amount\\\"\\r\\n                            slot=\\\"end\\\"\\r\\n                            placeholder=\\\"{{max_question_count}}\\\"\\r\\n                    >\\r\\n\\r\\n\\r\\n\\r\\n                        <ion-select-option *ngFor=\\\"let dummy of ' '.repeat(max_question_count).split(''), let x = index\\\"   value=\\\"{{x+1}}\\\" >{{x+1}}\\r\\n                        </ion-select-option>\\r\\n\\r\\n\\r\\n                    </ion-select>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n\\r\\n            <ion-button\\r\\n                    padding-horizontal=\\\"\\\"\\r\\n                    expand=\\\"block\\\"\\r\\n                    (click)=\\\"submitQuizConfiguration()\\\"\\r\\n            >START\\r\\n            </ion-button>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </form>\\r\\n    </div>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1aXotbGFuZGluZy9xdWl6LWxhbmRpbmcucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { LocalStorageService } from \"../../services/local-storage/local-storage.service\";\r\nimport { UtilsService } from \"../../services/utils/utils.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { QuizService } from \"../../services/quiz/quiz.service\";\r\nimport {first} from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-quiz-landing\",\r\n  templateUrl: \"./quiz-landing.page.html\",\r\n  styleUrls: [\"./quiz-landing.page.scss\"]\r\n})\r\nexport class QuizLandingPage implements OnInit {\r\n  paused_quiz;\r\n  data_loaded = false;\r\n  quiz_journey_data = false;\r\n    max_question_count = 5\r\n\r\n    customActionSheetOptions: any = {\r\n    header: \"Select Category  (Scroll Down For More)\"\r\n  };\r\n\r\n    yearActionSheetOptions: any = {\r\n        header: \"2000 - 2013 (Scroll Down For More)\"\r\n    };\r\n\r\n    questionNumberActionSheetOptions: any = {\r\n        header: `Scroll Down For More`\r\n    };\r\n\r\n  exam_years = ['2000', '2001', '2002', '2003', '2004',  '2005',\"2006\" ,'2007', '2008', '2009', '2010', '2011', '2012', '2013'];\r\n\r\n\r\n\r\n\r\n\r\n  quiz_config = {\r\n    type: \"jamb\",\r\n    subject: \"english\",\r\n    amount: this.max_question_count,\r\n      year: '2015'\r\n  };\r\n\r\n  exam_types = [];\r\n  subjects = [];\r\n\r\n    /*getExamTypeDisplayName = this.quizService.getExamTypeDisplayName\r\n    getSubjectDisplayName = this.quizService.getSubjectDisplayName*/\r\n\r\n  constructor(\r\n    private localStorage: LocalStorageService,\r\n    private util: UtilsService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public quizService: QuizService\r\n  ) {}\r\n\r\n\r\n\r\n  ngOnInit(){\r\n\r\n\r\n      this.localStorage.getOtherData().subscribe((other_data: any)=>{\r\n          this.max_question_count = other_data.max_question_count\r\n      })\r\n\r\n\r\n      this.localStorage.getPausedQuiz().subscribe((paused_quiz: any) => {\r\n\r\n        console.log('L Page new stream' ,paused_quiz)\r\n\r\n          if (!this.util.isEmptyObject(paused_quiz) && typeof paused_quiz.quiz_config.type === 'string') {\r\n            console.log('Pause quiz is not empty')\r\n\r\n              this.paused_quiz = paused_quiz;\r\n              this.paused_quiz.type = paused_quiz.type;\r\n          }\r\n          else{\r\n              console.log('Pause quiz is empty')\r\n              this.paused_quiz = null;\r\n          }\r\n\r\n\r\n\r\n          this.data_loaded = true;\r\n      });\r\n\r\n\r\n      this.quizService.getQuizConfig().subscribe((config_data: any) => {\r\n          console.log(config_data);\r\n          this.exam_types = config_data.exam_types;\r\n          this.subjects = config_data.subjects;\r\n\r\n      });\r\n\r\n  }\r\n\r\n  startNewQuiz() {\r\n    this.localStorage.deletePausedQuiz()\r\n    this.paused_quiz = false;\r\n  }\r\n\r\n  resumePausedQuiz() {\r\n\r\n      this.quizService.setInstantStartWithPausedQuiz(false);\r\n\r\n    this.router.navigate([\r\n      `/quiz-page/${this.paused_quiz.quiz_config.type}/${\r\n        this.paused_quiz.quiz_config.subject\r\n      }/${this.paused_quiz.quiz_config.amount}/${this.quiz_config.year}?reload=` +\r\n        Math.random() * 10\r\n    ]);\r\n  }\r\n\r\n  submitQuizConfiguration() {\r\n    console.log(this.quiz_config);\r\n\r\n    if (\r\n      !this.quiz_config.type ||\r\n      !this.quiz_config.subject ||\r\n      this.quiz_config.amount < 1\r\n    ) {\r\n      this.util.showToast(\"Please Enter Data For all Fields To Proceed\", 5000);\r\n\r\n      return false;\r\n    }\r\n\r\n    this.localStorage.deletePausedQuiz();\r\n\r\n    this.router.navigate([\r\n      `/quiz-page/${this.quiz_config.type}/${this.quiz_config.subject}/${this.quiz_config.amount}/${this.quiz_config.year}`\r\n    ]);\r\n  }\r\n}\r\n"],"sourceRoot":""}